// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: esgobservabilitydemo/esgobservabilitydemo/v1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgUpdateParams is the Msg/UpdateParams request type.
type MsgUpdateParams struct {
	// authority is the address that controls the module (defaults to x/gov unless overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// NOTE: All parameters must be supplied.
	Params Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateParams) Reset()         { *m = MsgUpdateParams{} }
func (m *MsgUpdateParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParams) ProtoMessage()    {}
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bfa141b0b096fa7, []int{0}
}
func (m *MsgUpdateParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParams.Merge(m, src)
}
func (m *MsgUpdateParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParams proto.InternalMessageInfo

func (m *MsgUpdateParams) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateParams) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
type MsgUpdateParamsResponse struct {
}

func (m *MsgUpdateParamsResponse) Reset()         { *m = MsgUpdateParamsResponse{} }
func (m *MsgUpdateParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParamsResponse) ProtoMessage()    {}
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bfa141b0b096fa7, []int{1}
}
func (m *MsgUpdateParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParamsResponse.Merge(m, src)
}
func (m *MsgUpdateParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParamsResponse proto.InternalMessageInfo

// MsgCreateRawMaterialExtraction defines the MsgCreateRawMaterialExtraction message.
type MsgCreateRawMaterialExtraction struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ResourceType string `protobuf:"bytes,2,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	WaterUse     string `protobuf:"bytes,3,opt,name=water_use,json=waterUse,proto3" json:"water_use,omitempty"`
	Emissions    string `protobuf:"bytes,4,opt,name=emissions,proto3" json:"emissions,omitempty"`
}

func (m *MsgCreateRawMaterialExtraction) Reset()         { *m = MsgCreateRawMaterialExtraction{} }
func (m *MsgCreateRawMaterialExtraction) String() string { return proto.CompactTextString(m) }
func (*MsgCreateRawMaterialExtraction) ProtoMessage()    {}
func (*MsgCreateRawMaterialExtraction) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bfa141b0b096fa7, []int{2}
}
func (m *MsgCreateRawMaterialExtraction) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateRawMaterialExtraction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateRawMaterialExtraction.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateRawMaterialExtraction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateRawMaterialExtraction.Merge(m, src)
}
func (m *MsgCreateRawMaterialExtraction) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateRawMaterialExtraction) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateRawMaterialExtraction.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateRawMaterialExtraction proto.InternalMessageInfo

func (m *MsgCreateRawMaterialExtraction) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateRawMaterialExtraction) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *MsgCreateRawMaterialExtraction) GetWaterUse() string {
	if m != nil {
		return m.WaterUse
	}
	return ""
}

func (m *MsgCreateRawMaterialExtraction) GetEmissions() string {
	if m != nil {
		return m.Emissions
	}
	return ""
}

// MsgCreateRawMaterialExtractionResponse defines the MsgCreateRawMaterialExtractionResponse message.
type MsgCreateRawMaterialExtractionResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateRawMaterialExtractionResponse) Reset() {
	*m = MsgCreateRawMaterialExtractionResponse{}
}
func (m *MsgCreateRawMaterialExtractionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateRawMaterialExtractionResponse) ProtoMessage()    {}
func (*MsgCreateRawMaterialExtractionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bfa141b0b096fa7, []int{3}
}
func (m *MsgCreateRawMaterialExtractionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateRawMaterialExtractionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateRawMaterialExtractionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateRawMaterialExtractionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateRawMaterialExtractionResponse.Merge(m, src)
}
func (m *MsgCreateRawMaterialExtractionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateRawMaterialExtractionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateRawMaterialExtractionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateRawMaterialExtractionResponse proto.InternalMessageInfo

func (m *MsgCreateRawMaterialExtractionResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// MsgUpdateRawMaterialExtraction defines the MsgUpdateRawMaterialExtraction message.
type MsgUpdateRawMaterialExtraction struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id           uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	ResourceType string `protobuf:"bytes,3,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	WaterUse     string `protobuf:"bytes,4,opt,name=water_use,json=waterUse,proto3" json:"water_use,omitempty"`
	Emissions    string `protobuf:"bytes,5,opt,name=emissions,proto3" json:"emissions,omitempty"`
}

func (m *MsgUpdateRawMaterialExtraction) Reset()         { *m = MsgUpdateRawMaterialExtraction{} }
func (m *MsgUpdateRawMaterialExtraction) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateRawMaterialExtraction) ProtoMessage()    {}
func (*MsgUpdateRawMaterialExtraction) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bfa141b0b096fa7, []int{4}
}
func (m *MsgUpdateRawMaterialExtraction) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateRawMaterialExtraction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateRawMaterialExtraction.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateRawMaterialExtraction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateRawMaterialExtraction.Merge(m, src)
}
func (m *MsgUpdateRawMaterialExtraction) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateRawMaterialExtraction) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateRawMaterialExtraction.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateRawMaterialExtraction proto.InternalMessageInfo

func (m *MsgUpdateRawMaterialExtraction) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateRawMaterialExtraction) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateRawMaterialExtraction) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *MsgUpdateRawMaterialExtraction) GetWaterUse() string {
	if m != nil {
		return m.WaterUse
	}
	return ""
}

func (m *MsgUpdateRawMaterialExtraction) GetEmissions() string {
	if m != nil {
		return m.Emissions
	}
	return ""
}

// MsgUpdateRawMaterialExtractionResponse defines the MsgUpdateRawMaterialExtractionResponse message.
type MsgUpdateRawMaterialExtractionResponse struct {
}

func (m *MsgUpdateRawMaterialExtractionResponse) Reset() {
	*m = MsgUpdateRawMaterialExtractionResponse{}
}
func (m *MsgUpdateRawMaterialExtractionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateRawMaterialExtractionResponse) ProtoMessage()    {}
func (*MsgUpdateRawMaterialExtractionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bfa141b0b096fa7, []int{5}
}
func (m *MsgUpdateRawMaterialExtractionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateRawMaterialExtractionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateRawMaterialExtractionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateRawMaterialExtractionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateRawMaterialExtractionResponse.Merge(m, src)
}
func (m *MsgUpdateRawMaterialExtractionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateRawMaterialExtractionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateRawMaterialExtractionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateRawMaterialExtractionResponse proto.InternalMessageInfo

// MsgDeleteRawMaterialExtraction defines the MsgDeleteRawMaterialExtraction message.
type MsgDeleteRawMaterialExtraction struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteRawMaterialExtraction) Reset()         { *m = MsgDeleteRawMaterialExtraction{} }
func (m *MsgDeleteRawMaterialExtraction) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteRawMaterialExtraction) ProtoMessage()    {}
func (*MsgDeleteRawMaterialExtraction) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bfa141b0b096fa7, []int{6}
}
func (m *MsgDeleteRawMaterialExtraction) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteRawMaterialExtraction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteRawMaterialExtraction.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteRawMaterialExtraction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteRawMaterialExtraction.Merge(m, src)
}
func (m *MsgDeleteRawMaterialExtraction) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteRawMaterialExtraction) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteRawMaterialExtraction.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteRawMaterialExtraction proto.InternalMessageInfo

func (m *MsgDeleteRawMaterialExtraction) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteRawMaterialExtraction) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// MsgDeleteRawMaterialExtractionResponse defines the MsgDeleteRawMaterialExtractionResponse message.
type MsgDeleteRawMaterialExtractionResponse struct {
}

func (m *MsgDeleteRawMaterialExtractionResponse) Reset() {
	*m = MsgDeleteRawMaterialExtractionResponse{}
}
func (m *MsgDeleteRawMaterialExtractionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteRawMaterialExtractionResponse) ProtoMessage()    {}
func (*MsgDeleteRawMaterialExtractionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bfa141b0b096fa7, []int{7}
}
func (m *MsgDeleteRawMaterialExtractionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteRawMaterialExtractionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteRawMaterialExtractionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteRawMaterialExtractionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteRawMaterialExtractionResponse.Merge(m, src)
}
func (m *MsgDeleteRawMaterialExtractionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteRawMaterialExtractionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteRawMaterialExtractionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteRawMaterialExtractionResponse proto.InternalMessageInfo

// MsgCreateManufacturing defines the MsgCreateManufacturing message.
type MsgCreateManufacturing struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ComponentType string `protobuf:"bytes,2,opt,name=component_type,json=componentType,proto3" json:"component_type,omitempty"`
	WaterUse      string `protobuf:"bytes,3,opt,name=water_use,json=waterUse,proto3" json:"water_use,omitempty"`
	Emissions     string `protobuf:"bytes,4,opt,name=emissions,proto3" json:"emissions,omitempty"`
}

func (m *MsgCreateManufacturing) Reset()         { *m = MsgCreateManufacturing{} }
func (m *MsgCreateManufacturing) String() string { return proto.CompactTextString(m) }
func (*MsgCreateManufacturing) ProtoMessage()    {}
func (*MsgCreateManufacturing) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bfa141b0b096fa7, []int{8}
}
func (m *MsgCreateManufacturing) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateManufacturing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateManufacturing.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateManufacturing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateManufacturing.Merge(m, src)
}
func (m *MsgCreateManufacturing) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateManufacturing) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateManufacturing.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateManufacturing proto.InternalMessageInfo

func (m *MsgCreateManufacturing) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateManufacturing) GetComponentType() string {
	if m != nil {
		return m.ComponentType
	}
	return ""
}

func (m *MsgCreateManufacturing) GetWaterUse() string {
	if m != nil {
		return m.WaterUse
	}
	return ""
}

func (m *MsgCreateManufacturing) GetEmissions() string {
	if m != nil {
		return m.Emissions
	}
	return ""
}

// MsgCreateManufacturingResponse defines the MsgCreateManufacturingResponse message.
type MsgCreateManufacturingResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateManufacturingResponse) Reset()         { *m = MsgCreateManufacturingResponse{} }
func (m *MsgCreateManufacturingResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateManufacturingResponse) ProtoMessage()    {}
func (*MsgCreateManufacturingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bfa141b0b096fa7, []int{9}
}
func (m *MsgCreateManufacturingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateManufacturingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateManufacturingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateManufacturingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateManufacturingResponse.Merge(m, src)
}
func (m *MsgCreateManufacturingResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateManufacturingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateManufacturingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateManufacturingResponse proto.InternalMessageInfo

func (m *MsgCreateManufacturingResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// MsgUpdateManufacturing defines the MsgUpdateManufacturing message.
type MsgUpdateManufacturing struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id            uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	ComponentType string `protobuf:"bytes,3,opt,name=component_type,json=componentType,proto3" json:"component_type,omitempty"`
	WaterUse      string `protobuf:"bytes,4,opt,name=water_use,json=waterUse,proto3" json:"water_use,omitempty"`
	Emissions     string `protobuf:"bytes,5,opt,name=emissions,proto3" json:"emissions,omitempty"`
}

func (m *MsgUpdateManufacturing) Reset()         { *m = MsgUpdateManufacturing{} }
func (m *MsgUpdateManufacturing) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateManufacturing) ProtoMessage()    {}
func (*MsgUpdateManufacturing) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bfa141b0b096fa7, []int{10}
}
func (m *MsgUpdateManufacturing) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateManufacturing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateManufacturing.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateManufacturing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateManufacturing.Merge(m, src)
}
func (m *MsgUpdateManufacturing) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateManufacturing) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateManufacturing.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateManufacturing proto.InternalMessageInfo

func (m *MsgUpdateManufacturing) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateManufacturing) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateManufacturing) GetComponentType() string {
	if m != nil {
		return m.ComponentType
	}
	return ""
}

func (m *MsgUpdateManufacturing) GetWaterUse() string {
	if m != nil {
		return m.WaterUse
	}
	return ""
}

func (m *MsgUpdateManufacturing) GetEmissions() string {
	if m != nil {
		return m.Emissions
	}
	return ""
}

// MsgUpdateManufacturingResponse defines the MsgUpdateManufacturingResponse message.
type MsgUpdateManufacturingResponse struct {
}

func (m *MsgUpdateManufacturingResponse) Reset()         { *m = MsgUpdateManufacturingResponse{} }
func (m *MsgUpdateManufacturingResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateManufacturingResponse) ProtoMessage()    {}
func (*MsgUpdateManufacturingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bfa141b0b096fa7, []int{11}
}
func (m *MsgUpdateManufacturingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateManufacturingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateManufacturingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateManufacturingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateManufacturingResponse.Merge(m, src)
}
func (m *MsgUpdateManufacturingResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateManufacturingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateManufacturingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateManufacturingResponse proto.InternalMessageInfo

// MsgDeleteManufacturing defines the MsgDeleteManufacturing message.
type MsgDeleteManufacturing struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteManufacturing) Reset()         { *m = MsgDeleteManufacturing{} }
func (m *MsgDeleteManufacturing) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteManufacturing) ProtoMessage()    {}
func (*MsgDeleteManufacturing) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bfa141b0b096fa7, []int{12}
}
func (m *MsgDeleteManufacturing) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteManufacturing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteManufacturing.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteManufacturing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteManufacturing.Merge(m, src)
}
func (m *MsgDeleteManufacturing) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteManufacturing) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteManufacturing.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteManufacturing proto.InternalMessageInfo

func (m *MsgDeleteManufacturing) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteManufacturing) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// MsgDeleteManufacturingResponse defines the MsgDeleteManufacturingResponse message.
type MsgDeleteManufacturingResponse struct {
}

func (m *MsgDeleteManufacturingResponse) Reset()         { *m = MsgDeleteManufacturingResponse{} }
func (m *MsgDeleteManufacturingResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteManufacturingResponse) ProtoMessage()    {}
func (*MsgDeleteManufacturingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bfa141b0b096fa7, []int{13}
}
func (m *MsgDeleteManufacturingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteManufacturingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteManufacturingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteManufacturingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteManufacturingResponse.Merge(m, src)
}
func (m *MsgDeleteManufacturingResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteManufacturingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteManufacturingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteManufacturingResponse proto.InternalMessageInfo

// MsgCreateTransportation defines the MsgCreateTransportation message.
type MsgCreateTransportation struct {
	Creator            string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	TransportationType string `protobuf:"bytes,2,opt,name=transportation_type,json=transportationType,proto3" json:"transportation_type,omitempty"`
	FuelUse            string `protobuf:"bytes,3,opt,name=fuel_use,json=fuelUse,proto3" json:"fuel_use,omitempty"`
	Emissions          string `protobuf:"bytes,4,opt,name=emissions,proto3" json:"emissions,omitempty"`
}

func (m *MsgCreateTransportation) Reset()         { *m = MsgCreateTransportation{} }
func (m *MsgCreateTransportation) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTransportation) ProtoMessage()    {}
func (*MsgCreateTransportation) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bfa141b0b096fa7, []int{14}
}
func (m *MsgCreateTransportation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTransportation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTransportation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTransportation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTransportation.Merge(m, src)
}
func (m *MsgCreateTransportation) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTransportation) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTransportation.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTransportation proto.InternalMessageInfo

func (m *MsgCreateTransportation) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateTransportation) GetTransportationType() string {
	if m != nil {
		return m.TransportationType
	}
	return ""
}

func (m *MsgCreateTransportation) GetFuelUse() string {
	if m != nil {
		return m.FuelUse
	}
	return ""
}

func (m *MsgCreateTransportation) GetEmissions() string {
	if m != nil {
		return m.Emissions
	}
	return ""
}

// MsgCreateTransportationResponse defines the MsgCreateTransportationResponse message.
type MsgCreateTransportationResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateTransportationResponse) Reset()         { *m = MsgCreateTransportationResponse{} }
func (m *MsgCreateTransportationResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTransportationResponse) ProtoMessage()    {}
func (*MsgCreateTransportationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bfa141b0b096fa7, []int{15}
}
func (m *MsgCreateTransportationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTransportationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTransportationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTransportationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTransportationResponse.Merge(m, src)
}
func (m *MsgCreateTransportationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTransportationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTransportationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTransportationResponse proto.InternalMessageInfo

func (m *MsgCreateTransportationResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// MsgUpdateTransportation defines the MsgUpdateTransportation message.
type MsgUpdateTransportation struct {
	Creator            string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id                 uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	TransportationType string `protobuf:"bytes,3,opt,name=transportation_type,json=transportationType,proto3" json:"transportation_type,omitempty"`
	FuelUse            string `protobuf:"bytes,4,opt,name=fuel_use,json=fuelUse,proto3" json:"fuel_use,omitempty"`
	Emissions          string `protobuf:"bytes,5,opt,name=emissions,proto3" json:"emissions,omitempty"`
}

func (m *MsgUpdateTransportation) Reset()         { *m = MsgUpdateTransportation{} }
func (m *MsgUpdateTransportation) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTransportation) ProtoMessage()    {}
func (*MsgUpdateTransportation) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bfa141b0b096fa7, []int{16}
}
func (m *MsgUpdateTransportation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTransportation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTransportation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTransportation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTransportation.Merge(m, src)
}
func (m *MsgUpdateTransportation) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTransportation) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTransportation.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTransportation proto.InternalMessageInfo

func (m *MsgUpdateTransportation) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateTransportation) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateTransportation) GetTransportationType() string {
	if m != nil {
		return m.TransportationType
	}
	return ""
}

func (m *MsgUpdateTransportation) GetFuelUse() string {
	if m != nil {
		return m.FuelUse
	}
	return ""
}

func (m *MsgUpdateTransportation) GetEmissions() string {
	if m != nil {
		return m.Emissions
	}
	return ""
}

// MsgUpdateTransportationResponse defines the MsgUpdateTransportationResponse message.
type MsgUpdateTransportationResponse struct {
}

func (m *MsgUpdateTransportationResponse) Reset()         { *m = MsgUpdateTransportationResponse{} }
func (m *MsgUpdateTransportationResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTransportationResponse) ProtoMessage()    {}
func (*MsgUpdateTransportationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bfa141b0b096fa7, []int{17}
}
func (m *MsgUpdateTransportationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTransportationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTransportationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTransportationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTransportationResponse.Merge(m, src)
}
func (m *MsgUpdateTransportationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTransportationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTransportationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTransportationResponse proto.InternalMessageInfo

// MsgDeleteTransportation defines the MsgDeleteTransportation message.
type MsgDeleteTransportation struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteTransportation) Reset()         { *m = MsgDeleteTransportation{} }
func (m *MsgDeleteTransportation) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTransportation) ProtoMessage()    {}
func (*MsgDeleteTransportation) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bfa141b0b096fa7, []int{18}
}
func (m *MsgDeleteTransportation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteTransportation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTransportation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteTransportation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTransportation.Merge(m, src)
}
func (m *MsgDeleteTransportation) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteTransportation) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTransportation.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTransportation proto.InternalMessageInfo

func (m *MsgDeleteTransportation) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteTransportation) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// MsgDeleteTransportationResponse defines the MsgDeleteTransportationResponse message.
type MsgDeleteTransportationResponse struct {
}

func (m *MsgDeleteTransportationResponse) Reset()         { *m = MsgDeleteTransportationResponse{} }
func (m *MsgDeleteTransportationResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTransportationResponse) ProtoMessage()    {}
func (*MsgDeleteTransportationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bfa141b0b096fa7, []int{19}
}
func (m *MsgDeleteTransportationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteTransportationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTransportationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteTransportationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTransportationResponse.Merge(m, src)
}
func (m *MsgDeleteTransportationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteTransportationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTransportationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTransportationResponse proto.InternalMessageInfo

// MsgCreateMaterialProcessing defines the MsgCreateMaterialProcessing message.
type MsgCreateMaterialProcessing struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	MaterialType string `protobuf:"bytes,2,opt,name=material_type,json=materialType,proto3" json:"material_type,omitempty"`
	WaterUse     string `protobuf:"bytes,3,opt,name=water_use,json=waterUse,proto3" json:"water_use,omitempty"`
	Emissions    string `protobuf:"bytes,4,opt,name=emissions,proto3" json:"emissions,omitempty"`
}

func (m *MsgCreateMaterialProcessing) Reset()         { *m = MsgCreateMaterialProcessing{} }
func (m *MsgCreateMaterialProcessing) String() string { return proto.CompactTextString(m) }
func (*MsgCreateMaterialProcessing) ProtoMessage()    {}
func (*MsgCreateMaterialProcessing) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bfa141b0b096fa7, []int{20}
}
func (m *MsgCreateMaterialProcessing) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateMaterialProcessing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateMaterialProcessing.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateMaterialProcessing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateMaterialProcessing.Merge(m, src)
}
func (m *MsgCreateMaterialProcessing) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateMaterialProcessing) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateMaterialProcessing.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateMaterialProcessing proto.InternalMessageInfo

func (m *MsgCreateMaterialProcessing) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateMaterialProcessing) GetMaterialType() string {
	if m != nil {
		return m.MaterialType
	}
	return ""
}

func (m *MsgCreateMaterialProcessing) GetWaterUse() string {
	if m != nil {
		return m.WaterUse
	}
	return ""
}

func (m *MsgCreateMaterialProcessing) GetEmissions() string {
	if m != nil {
		return m.Emissions
	}
	return ""
}

// MsgCreateMaterialProcessingResponse defines the MsgCreateMaterialProcessingResponse message.
type MsgCreateMaterialProcessingResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateMaterialProcessingResponse) Reset()         { *m = MsgCreateMaterialProcessingResponse{} }
func (m *MsgCreateMaterialProcessingResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateMaterialProcessingResponse) ProtoMessage()    {}
func (*MsgCreateMaterialProcessingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bfa141b0b096fa7, []int{21}
}
func (m *MsgCreateMaterialProcessingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateMaterialProcessingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateMaterialProcessingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateMaterialProcessingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateMaterialProcessingResponse.Merge(m, src)
}
func (m *MsgCreateMaterialProcessingResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateMaterialProcessingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateMaterialProcessingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateMaterialProcessingResponse proto.InternalMessageInfo

func (m *MsgCreateMaterialProcessingResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// MsgUpdateMaterialProcessing defines the MsgUpdateMaterialProcessing message.
type MsgUpdateMaterialProcessing struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id           uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	MaterialType string `protobuf:"bytes,3,opt,name=material_type,json=materialType,proto3" json:"material_type,omitempty"`
	WaterUse     string `protobuf:"bytes,4,opt,name=water_use,json=waterUse,proto3" json:"water_use,omitempty"`
	Emissions    string `protobuf:"bytes,5,opt,name=emissions,proto3" json:"emissions,omitempty"`
}

func (m *MsgUpdateMaterialProcessing) Reset()         { *m = MsgUpdateMaterialProcessing{} }
func (m *MsgUpdateMaterialProcessing) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateMaterialProcessing) ProtoMessage()    {}
func (*MsgUpdateMaterialProcessing) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bfa141b0b096fa7, []int{22}
}
func (m *MsgUpdateMaterialProcessing) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateMaterialProcessing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateMaterialProcessing.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateMaterialProcessing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateMaterialProcessing.Merge(m, src)
}
func (m *MsgUpdateMaterialProcessing) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateMaterialProcessing) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateMaterialProcessing.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateMaterialProcessing proto.InternalMessageInfo

func (m *MsgUpdateMaterialProcessing) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateMaterialProcessing) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateMaterialProcessing) GetMaterialType() string {
	if m != nil {
		return m.MaterialType
	}
	return ""
}

func (m *MsgUpdateMaterialProcessing) GetWaterUse() string {
	if m != nil {
		return m.WaterUse
	}
	return ""
}

func (m *MsgUpdateMaterialProcessing) GetEmissions() string {
	if m != nil {
		return m.Emissions
	}
	return ""
}

// MsgUpdateMaterialProcessingResponse defines the MsgUpdateMaterialProcessingResponse message.
type MsgUpdateMaterialProcessingResponse struct {
}

func (m *MsgUpdateMaterialProcessingResponse) Reset()         { *m = MsgUpdateMaterialProcessingResponse{} }
func (m *MsgUpdateMaterialProcessingResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateMaterialProcessingResponse) ProtoMessage()    {}
func (*MsgUpdateMaterialProcessingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bfa141b0b096fa7, []int{23}
}
func (m *MsgUpdateMaterialProcessingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateMaterialProcessingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateMaterialProcessingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateMaterialProcessingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateMaterialProcessingResponse.Merge(m, src)
}
func (m *MsgUpdateMaterialProcessingResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateMaterialProcessingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateMaterialProcessingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateMaterialProcessingResponse proto.InternalMessageInfo

// MsgDeleteMaterialProcessing defines the MsgDeleteMaterialProcessing message.
type MsgDeleteMaterialProcessing struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteMaterialProcessing) Reset()         { *m = MsgDeleteMaterialProcessing{} }
func (m *MsgDeleteMaterialProcessing) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteMaterialProcessing) ProtoMessage()    {}
func (*MsgDeleteMaterialProcessing) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bfa141b0b096fa7, []int{24}
}
func (m *MsgDeleteMaterialProcessing) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteMaterialProcessing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteMaterialProcessing.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteMaterialProcessing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteMaterialProcessing.Merge(m, src)
}
func (m *MsgDeleteMaterialProcessing) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteMaterialProcessing) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteMaterialProcessing.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteMaterialProcessing proto.InternalMessageInfo

func (m *MsgDeleteMaterialProcessing) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteMaterialProcessing) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// MsgDeleteMaterialProcessingResponse defines the MsgDeleteMaterialProcessingResponse message.
type MsgDeleteMaterialProcessingResponse struct {
}

func (m *MsgDeleteMaterialProcessingResponse) Reset()         { *m = MsgDeleteMaterialProcessingResponse{} }
func (m *MsgDeleteMaterialProcessingResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteMaterialProcessingResponse) ProtoMessage()    {}
func (*MsgDeleteMaterialProcessingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bfa141b0b096fa7, []int{25}
}
func (m *MsgDeleteMaterialProcessingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteMaterialProcessingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteMaterialProcessingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteMaterialProcessingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteMaterialProcessingResponse.Merge(m, src)
}
func (m *MsgDeleteMaterialProcessingResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteMaterialProcessingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteMaterialProcessingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteMaterialProcessingResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgUpdateParams)(nil), "esgobservabilitydemo.esgobservabilitydemo.v1.MsgUpdateParams")
	proto.RegisterType((*MsgUpdateParamsResponse)(nil), "esgobservabilitydemo.esgobservabilitydemo.v1.MsgUpdateParamsResponse")
	proto.RegisterType((*MsgCreateRawMaterialExtraction)(nil), "esgobservabilitydemo.esgobservabilitydemo.v1.MsgCreateRawMaterialExtraction")
	proto.RegisterType((*MsgCreateRawMaterialExtractionResponse)(nil), "esgobservabilitydemo.esgobservabilitydemo.v1.MsgCreateRawMaterialExtractionResponse")
	proto.RegisterType((*MsgUpdateRawMaterialExtraction)(nil), "esgobservabilitydemo.esgobservabilitydemo.v1.MsgUpdateRawMaterialExtraction")
	proto.RegisterType((*MsgUpdateRawMaterialExtractionResponse)(nil), "esgobservabilitydemo.esgobservabilitydemo.v1.MsgUpdateRawMaterialExtractionResponse")
	proto.RegisterType((*MsgDeleteRawMaterialExtraction)(nil), "esgobservabilitydemo.esgobservabilitydemo.v1.MsgDeleteRawMaterialExtraction")
	proto.RegisterType((*MsgDeleteRawMaterialExtractionResponse)(nil), "esgobservabilitydemo.esgobservabilitydemo.v1.MsgDeleteRawMaterialExtractionResponse")
	proto.RegisterType((*MsgCreateManufacturing)(nil), "esgobservabilitydemo.esgobservabilitydemo.v1.MsgCreateManufacturing")
	proto.RegisterType((*MsgCreateManufacturingResponse)(nil), "esgobservabilitydemo.esgobservabilitydemo.v1.MsgCreateManufacturingResponse")
	proto.RegisterType((*MsgUpdateManufacturing)(nil), "esgobservabilitydemo.esgobservabilitydemo.v1.MsgUpdateManufacturing")
	proto.RegisterType((*MsgUpdateManufacturingResponse)(nil), "esgobservabilitydemo.esgobservabilitydemo.v1.MsgUpdateManufacturingResponse")
	proto.RegisterType((*MsgDeleteManufacturing)(nil), "esgobservabilitydemo.esgobservabilitydemo.v1.MsgDeleteManufacturing")
	proto.RegisterType((*MsgDeleteManufacturingResponse)(nil), "esgobservabilitydemo.esgobservabilitydemo.v1.MsgDeleteManufacturingResponse")
	proto.RegisterType((*MsgCreateTransportation)(nil), "esgobservabilitydemo.esgobservabilitydemo.v1.MsgCreateTransportation")
	proto.RegisterType((*MsgCreateTransportationResponse)(nil), "esgobservabilitydemo.esgobservabilitydemo.v1.MsgCreateTransportationResponse")
	proto.RegisterType((*MsgUpdateTransportation)(nil), "esgobservabilitydemo.esgobservabilitydemo.v1.MsgUpdateTransportation")
	proto.RegisterType((*MsgUpdateTransportationResponse)(nil), "esgobservabilitydemo.esgobservabilitydemo.v1.MsgUpdateTransportationResponse")
	proto.RegisterType((*MsgDeleteTransportation)(nil), "esgobservabilitydemo.esgobservabilitydemo.v1.MsgDeleteTransportation")
	proto.RegisterType((*MsgDeleteTransportationResponse)(nil), "esgobservabilitydemo.esgobservabilitydemo.v1.MsgDeleteTransportationResponse")
	proto.RegisterType((*MsgCreateMaterialProcessing)(nil), "esgobservabilitydemo.esgobservabilitydemo.v1.MsgCreateMaterialProcessing")
	proto.RegisterType((*MsgCreateMaterialProcessingResponse)(nil), "esgobservabilitydemo.esgobservabilitydemo.v1.MsgCreateMaterialProcessingResponse")
	proto.RegisterType((*MsgUpdateMaterialProcessing)(nil), "esgobservabilitydemo.esgobservabilitydemo.v1.MsgUpdateMaterialProcessing")
	proto.RegisterType((*MsgUpdateMaterialProcessingResponse)(nil), "esgobservabilitydemo.esgobservabilitydemo.v1.MsgUpdateMaterialProcessingResponse")
	proto.RegisterType((*MsgDeleteMaterialProcessing)(nil), "esgobservabilitydemo.esgobservabilitydemo.v1.MsgDeleteMaterialProcessing")
	proto.RegisterType((*MsgDeleteMaterialProcessingResponse)(nil), "esgobservabilitydemo.esgobservabilitydemo.v1.MsgDeleteMaterialProcessingResponse")
}

func init() {
	proto.RegisterFile("esgobservabilitydemo/esgobservabilitydemo/v1/tx.proto", fileDescriptor_1bfa141b0b096fa7)
}

var fileDescriptor_1bfa141b0b096fa7 = []byte{
	// 983 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xcf, 0x6f, 0xe3, 0x44,
	0x14, 0xce, 0x24, 0xd9, 0x1f, 0x19, 0xda, 0x45, 0x78, 0x2b, 0x36, 0x75, 0x51, 0xb6, 0xa4, 0x5a,
	0x54, 0x45, 0x90, 0x90, 0xc2, 0x22, 0x58, 0xc4, 0x81, 0x92, 0x1c, 0x2a, 0x1a, 0xb4, 0x84, 0x56,
	0x48, 0x5c, 0x2a, 0x37, 0x99, 0x1a, 0x43, 0xec, 0xb1, 0x66, 0x26, 0x6d, 0x73, 0x43, 0x1c, 0x39,
	0x71, 0xe0, 0x8f, 0x00, 0x89, 0x43, 0x90, 0x38, 0x70, 0x40, 0x42, 0x20, 0x21, 0xf5, 0x80, 0x44,
	0x55, 0x09, 0x89, 0x13, 0x42, 0xed, 0x21, 0x77, 0xfe, 0x02, 0xe4, 0x99, 0xd8, 0x8d, 0xd3, 0xf1,
	0xa4, 0xb1, 0xdd, 0x4b, 0x55, 0xbf, 0x99, 0xbc, 0xf7, 0x7d, 0xdf, 0x7b, 0x33, 0xfe, 0x64, 0xf8,
	0x18, 0x51, 0x13, 0xef, 0x53, 0x44, 0x0e, 0x8d, 0x7d, 0xab, 0x67, 0xb1, 0x41, 0x17, 0xd9, 0xb8,
	0x26, 0x0d, 0x1e, 0xd6, 0x6b, 0xec, 0xb8, 0xea, 0x12, 0xcc, 0xb0, 0xf6, 0xb2, 0x6c, 0x47, 0x55,
	0x1a, 0x3c, 0xac, 0xeb, 0xcf, 0x19, 0xb6, 0xe5, 0xe0, 0x1a, 0xff, 0x2b, 0x12, 0xe8, 0x0f, 0x3a,
	0x98, 0xda, 0x98, 0xd6, 0x6c, 0x6a, 0x7a, 0x89, 0x6d, 0x6a, 0x8e, 0x17, 0x96, 0xc5, 0xc2, 0x1e,
	0x7f, 0xaa, 0x89, 0x87, 0xf1, 0xd2, 0x5b, 0x73, 0x61, 0x75, 0x0d, 0x62, 0xd8, 0xfe, 0x4f, 0x97,
	0x4c, 0x6c, 0x62, 0x91, 0xd2, 0xfb, 0x4f, 0x44, 0xcb, 0xff, 0x01, 0xf8, 0x6c, 0x8b, 0x9a, 0xbb,
	0x6e, 0xd7, 0x60, 0xe8, 0x29, 0xdf, 0xaf, 0xbd, 0x01, 0x0b, 0x46, 0x9f, 0x7d, 0x8a, 0x89, 0xc5,
	0x06, 0x45, 0xb0, 0x0a, 0xd6, 0x0b, 0x9b, 0xc5, 0xb3, 0x1f, 0x5f, 0x59, 0x1a, 0x23, 0x79, 0xb7,
	0xdb, 0x25, 0x88, 0xd2, 0x8f, 0x18, 0xb1, 0x1c, 0xb3, 0x7d, 0xb9, 0x55, 0xfb, 0x18, 0xde, 0x16,
	0x15, 0x8b, 0xd9, 0x55, 0xb0, 0xfe, 0xcc, 0xc6, 0xeb, 0xd5, 0x79, 0x24, 0xaa, 0x8a, 0xea, 0x9b,
	0x85, 0x93, 0x7f, 0x1e, 0x66, 0xbe, 0x1d, 0x0d, 0x2b, 0xa0, 0x3d, 0x4e, 0xf7, 0xe4, 0x83, 0x2f,
	0x47, 0xc3, 0xca, 0x65, 0xa1, 0xaf, 0x46, 0xc3, 0xca, 0xdb, 0x52, 0xce, 0xc7, 0x72, 0x29, 0xa6,
	0x08, 0x96, 0x97, 0xe1, 0x83, 0xa9, 0x50, 0x1b, 0x51, 0x17, 0x3b, 0x14, 0x95, 0x7f, 0x03, 0xb0,
	0xd4, 0xa2, 0xe6, 0x7b, 0x04, 0x19, 0x0c, 0xb5, 0x8d, 0xa3, 0x96, 0xc1, 0x10, 0xb1, 0x8c, 0x5e,
	0xf3, 0x98, 0x11, 0xa3, 0xc3, 0x2c, 0xec, 0x68, 0x1b, 0xf0, 0x4e, 0xc7, 0x5b, 0xc6, 0x64, 0xa6,
	0x38, 0xfe, 0x46, 0x6d, 0x0d, 0x2e, 0x12, 0x44, 0x71, 0x9f, 0x74, 0xd0, 0x1e, 0x1b, 0xb8, 0x88,
	0x2b, 0x54, 0x68, 0x2f, 0xf8, 0xc1, 0x9d, 0x81, 0x8b, 0xb4, 0x15, 0x58, 0x38, 0xf2, 0xca, 0xed,
	0xf5, 0x29, 0x2a, 0xe6, 0xf8, 0x86, 0xbb, 0x3c, 0xb0, 0x4b, 0x91, 0xf6, 0x02, 0x2c, 0x20, 0xdb,
	0xa2, 0xd4, 0xc2, 0x0e, 0x2d, 0xe6, 0xf9, 0xe2, 0x65, 0xe0, 0xc9, 0x82, 0xa7, 0x90, 0x5f, 0xad,
	0xfc, 0x26, 0x7c, 0x49, 0xcd, 0xc1, 0xa7, 0xab, 0xdd, 0x83, 0x59, 0xab, 0xcb, 0x69, 0xe4, 0xdb,
	0x59, 0xab, 0x5b, 0x3e, 0x13, 0xf4, 0x85, 0x34, 0xe9, 0xd1, 0x17, 0x65, 0xb2, 0x7e, 0x99, 0xab,
	0x72, 0xe4, 0x66, 0xc9, 0x91, 0x57, 0xc9, 0x71, 0x4b, 0x2d, 0xc7, 0x3a, 0x97, 0x43, 0xc1, 0x29,
	0xe8, 0x3e, 0xe1, 0xec, 0x1b, 0xa8, 0x87, 0x6e, 0x90, 0xbd, 0x14, 0x9d, 0xa2, 0x66, 0x80, 0xee,
	0x67, 0x00, 0x9f, 0x0f, 0xfa, 0xda, 0x32, 0x9c, 0xfe, 0x81, 0xd1, 0x61, 0x7d, 0xaf, 0x56, 0x2c,
	0x58, 0x8f, 0xe0, 0xbd, 0x0e, 0xb6, 0x5d, 0xec, 0x20, 0x87, 0x4d, 0x0e, 0xe5, 0x62, 0x10, 0x4d,
	0x77, 0x2a, 0x5f, 0x9d, 0x38, 0x59, 0x21, 0xf4, 0x91, 0xd3, 0xf8, 0x87, 0x20, 0x2c, 0x3a, 0x97,
	0x9c, 0xf0, 0xf4, 0x14, 0x5e, 0x15, 0x20, 0x37, 0x53, 0x80, 0x24, 0x73, 0xb8, 0x3a, 0x71, 0xb6,
	0xa4, 0x02, 0x94, 0x3f, 0xe3, 0x7c, 0xc5, 0x2c, 0xa4, 0xce, 0x57, 0x8a, 0x46, 0x52, 0x2b, 0x40,
	0xf3, 0x3b, 0xe0, 0xf7, 0xa4, 0xe8, 0xd8, 0x0e, 0x31, 0x1c, 0xea, 0x62, 0xc2, 0x8c, 0xd8, 0xe7,
	0xa0, 0x06, 0xef, 0xb3, 0x50, 0x96, 0xc9, 0xa9, 0xd3, 0xc2, 0x4b, 0x5c, 0xf9, 0x65, 0x78, 0xf7,
	0xa0, 0x8f, 0x7a, 0x13, 0x93, 0x77, 0xc7, 0x7b, 0x9e, 0x77, 0xf0, 0xea, 0xf0, 0x61, 0x04, 0x8d,
	0xc8, 0xc9, 0xfb, 0x0b, 0x4c, 0xbc, 0x22, 0x52, 0xa0, 0x3e, 0x3d, 0x7a, 0x11, 0x52, 0xe4, 0xae,
	0x25, 0x45, 0x5e, 0x21, 0xc5, 0x8c, 0x11, 0x7c, 0x91, 0x4b, 0x21, 0xa3, 0x15, 0x74, 0xfd, 0x73,
	0xce, 0x5c, 0xcc, 0x45, 0xfa, 0xcc, 0xa5, 0x78, 0x64, 0xc5, 0x02, 0x3c, 0xbf, 0x00, 0xb8, 0x32,
	0x71, 0x6f, 0x88, 0xdb, 0xf1, 0x29, 0xc1, 0x1d, 0x44, 0x69, 0xdc, 0x93, 0xb1, 0x06, 0x17, 0xed,
	0x71, 0xa6, 0xd0, 0xeb, 0xd8, 0x0f, 0xa6, 0x7b, 0xf1, 0x3d, 0x86, 0x6b, 0x0a, 0x02, 0x91, 0x33,
	0xf8, 0xa7, 0x20, 0xee, 0xdf, 0x17, 0xa9, 0x10, 0x97, 0xbc, 0x88, 0xc3, 0x42, 0xe4, 0x66, 0x09,
	0x91, 0xe4, 0x02, 0x7c, 0xc4, 0x85, 0x88, 0x22, 0x14, 0x74, 0x1c, 0x73, 0xde, 0xfe, 0xcd, 0x74,
	0x13, 0xbc, 0xa5, 0xb8, 0xa2, 0x0a, 0xfa, 0xb8, 0x36, 0x7e, 0xd0, 0x60, 0xae, 0x45, 0x4d, 0xed,
	0x1b, 0x00, 0x17, 0x42, 0x86, 0xf9, 0x9d, 0xf9, 0x8c, 0xee, 0x94, 0xf7, 0xd4, 0x9b, 0x89, 0x7e,
	0x1e, 0xcc, 0xcf, 0xaf, 0x00, 0xae, 0xa8, 0x7c, 0xeb, 0xf6, 0xdc, 0x65, 0x14, 0xd9, 0xf4, 0x9d,
	0x34, 0xb3, 0x85, 0x38, 0xa8, 0xcc, 0xe7, 0x76, 0x4c, 0xa9, 0xd2, 0xe2, 0x70, 0x0d, 0x13, 0xc9,
	0x39, 0xa8, 0x2c, 0xe4, 0xfc, 0x1c, 0x14, 0xd9, 0x62, 0x70, 0xb8, 0x86, 0xd5, 0xd4, 0xbe, 0x03,
	0xf0, 0xbe, 0xcc, 0x67, 0x36, 0x62, 0x76, 0x3d, 0x94, 0x45, 0xdf, 0x4e, 0x23, 0x4b, 0x08, 0xab,
	0xcc, 0x22, 0x36, 0x62, 0x76, 0x37, 0x29, 0x56, 0x85, 0xc1, 0xe3, 0x58, 0x65, 0xf6, 0xae, 0x11,
	0xb3, 0x8b, 0x49, 0xb1, 0x2a, 0xec, 0x9f, 0xf6, 0x3d, 0x80, 0x4b, 0x52, 0xef, 0xd7, 0x8c, 0xd9,
	0xbe, 0x70, 0x1a, 0xbd, 0x95, 0x4a, 0x9a, 0x10, 0x5c, 0xa9, 0x5f, 0x8b, 0x7b, 0xbd, 0x26, 0x86,
	0xab, 0xb2, 0x59, 0x1c, 0xae, 0xd4, 0x64, 0x35, 0x63, 0x36, 0x31, 0x31, 0x5c, 0x95, 0x0b, 0xd3,
	0x7e, 0x02, 0xb0, 0x18, 0x69, 0xc1, 0xb6, 0x62, 0x9f, 0xe7, 0xe9, 0x54, 0xfa, 0x87, 0xa9, 0xa5,
	0x0a, 0x41, 0x8f, 0x34, 0x51, 0x5b, 0xb1, 0x8f, 0x77, 0x0a, 0xd0, 0x67, 0x39, 0x21, 0x0e, 0x3d,
	0xd2, 0x07, 0x6d, 0xc5, 0x3e, 0xed, 0x29, 0x40, 0x9f, 0x65, 0x96, 0xf4, 0x5b, 0x5f, 0x8c, 0x86,
	0x15, 0xb0, 0xf9, 0xfe, 0xc9, 0x79, 0x09, 0x9c, 0x9e, 0x97, 0xc0, 0xbf, 0xe7, 0x25, 0xf0, 0xf5,
	0x45, 0x29, 0x73, 0x7a, 0x51, 0xca, 0xfc, 0x7d, 0x51, 0xca, 0x7c, 0x52, 0x9f, 0xe7, 0x0b, 0x9e,
	0xe7, 0x4d, 0xe9, 0xfe, 0x6d, 0xfe, 0xcd, 0xf2, 0xb5, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0x3d,
	0xf1, 0xe8, 0x63, 0xb2, 0x15, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error)
	// CreateRawMaterialExtraction defines the CreateRawMaterialExtraction RPC.
	CreateRawMaterialExtraction(ctx context.Context, in *MsgCreateRawMaterialExtraction, opts ...grpc.CallOption) (*MsgCreateRawMaterialExtractionResponse, error)
	// UpdateRawMaterialExtraction defines the UpdateRawMaterialExtraction RPC.
	UpdateRawMaterialExtraction(ctx context.Context, in *MsgUpdateRawMaterialExtraction, opts ...grpc.CallOption) (*MsgUpdateRawMaterialExtractionResponse, error)
	// DeleteRawMaterialExtraction defines the DeleteRawMaterialExtraction RPC.
	DeleteRawMaterialExtraction(ctx context.Context, in *MsgDeleteRawMaterialExtraction, opts ...grpc.CallOption) (*MsgDeleteRawMaterialExtractionResponse, error)
	// CreateManufacturing defines the CreateManufacturing RPC.
	CreateManufacturing(ctx context.Context, in *MsgCreateManufacturing, opts ...grpc.CallOption) (*MsgCreateManufacturingResponse, error)
	// UpdateManufacturing defines the UpdateManufacturing RPC.
	UpdateManufacturing(ctx context.Context, in *MsgUpdateManufacturing, opts ...grpc.CallOption) (*MsgUpdateManufacturingResponse, error)
	// DeleteManufacturing defines the DeleteManufacturing RPC.
	DeleteManufacturing(ctx context.Context, in *MsgDeleteManufacturing, opts ...grpc.CallOption) (*MsgDeleteManufacturingResponse, error)
	// CreateTransportation defines the CreateTransportation RPC.
	CreateTransportation(ctx context.Context, in *MsgCreateTransportation, opts ...grpc.CallOption) (*MsgCreateTransportationResponse, error)
	// UpdateTransportation defines the UpdateTransportation RPC.
	UpdateTransportation(ctx context.Context, in *MsgUpdateTransportation, opts ...grpc.CallOption) (*MsgUpdateTransportationResponse, error)
	// DeleteTransportation defines the DeleteTransportation RPC.
	DeleteTransportation(ctx context.Context, in *MsgDeleteTransportation, opts ...grpc.CallOption) (*MsgDeleteTransportationResponse, error)
	// CreateMaterialProcessing defines the CreateMaterialProcessing RPC.
	CreateMaterialProcessing(ctx context.Context, in *MsgCreateMaterialProcessing, opts ...grpc.CallOption) (*MsgCreateMaterialProcessingResponse, error)
	// UpdateMaterialProcessing defines the UpdateMaterialProcessing RPC.
	UpdateMaterialProcessing(ctx context.Context, in *MsgUpdateMaterialProcessing, opts ...grpc.CallOption) (*MsgUpdateMaterialProcessingResponse, error)
	// DeleteMaterialProcessing defines the DeleteMaterialProcessing RPC.
	DeleteMaterialProcessing(ctx context.Context, in *MsgDeleteMaterialProcessing, opts ...grpc.CallOption) (*MsgDeleteMaterialProcessingResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error) {
	out := new(MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/esgobservabilitydemo.esgobservabilitydemo.v1.Msg/UpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateRawMaterialExtraction(ctx context.Context, in *MsgCreateRawMaterialExtraction, opts ...grpc.CallOption) (*MsgCreateRawMaterialExtractionResponse, error) {
	out := new(MsgCreateRawMaterialExtractionResponse)
	err := c.cc.Invoke(ctx, "/esgobservabilitydemo.esgobservabilitydemo.v1.Msg/CreateRawMaterialExtraction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateRawMaterialExtraction(ctx context.Context, in *MsgUpdateRawMaterialExtraction, opts ...grpc.CallOption) (*MsgUpdateRawMaterialExtractionResponse, error) {
	out := new(MsgUpdateRawMaterialExtractionResponse)
	err := c.cc.Invoke(ctx, "/esgobservabilitydemo.esgobservabilitydemo.v1.Msg/UpdateRawMaterialExtraction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteRawMaterialExtraction(ctx context.Context, in *MsgDeleteRawMaterialExtraction, opts ...grpc.CallOption) (*MsgDeleteRawMaterialExtractionResponse, error) {
	out := new(MsgDeleteRawMaterialExtractionResponse)
	err := c.cc.Invoke(ctx, "/esgobservabilitydemo.esgobservabilitydemo.v1.Msg/DeleteRawMaterialExtraction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateManufacturing(ctx context.Context, in *MsgCreateManufacturing, opts ...grpc.CallOption) (*MsgCreateManufacturingResponse, error) {
	out := new(MsgCreateManufacturingResponse)
	err := c.cc.Invoke(ctx, "/esgobservabilitydemo.esgobservabilitydemo.v1.Msg/CreateManufacturing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateManufacturing(ctx context.Context, in *MsgUpdateManufacturing, opts ...grpc.CallOption) (*MsgUpdateManufacturingResponse, error) {
	out := new(MsgUpdateManufacturingResponse)
	err := c.cc.Invoke(ctx, "/esgobservabilitydemo.esgobservabilitydemo.v1.Msg/UpdateManufacturing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteManufacturing(ctx context.Context, in *MsgDeleteManufacturing, opts ...grpc.CallOption) (*MsgDeleteManufacturingResponse, error) {
	out := new(MsgDeleteManufacturingResponse)
	err := c.cc.Invoke(ctx, "/esgobservabilitydemo.esgobservabilitydemo.v1.Msg/DeleteManufacturing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateTransportation(ctx context.Context, in *MsgCreateTransportation, opts ...grpc.CallOption) (*MsgCreateTransportationResponse, error) {
	out := new(MsgCreateTransportationResponse)
	err := c.cc.Invoke(ctx, "/esgobservabilitydemo.esgobservabilitydemo.v1.Msg/CreateTransportation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateTransportation(ctx context.Context, in *MsgUpdateTransportation, opts ...grpc.CallOption) (*MsgUpdateTransportationResponse, error) {
	out := new(MsgUpdateTransportationResponse)
	err := c.cc.Invoke(ctx, "/esgobservabilitydemo.esgobservabilitydemo.v1.Msg/UpdateTransportation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteTransportation(ctx context.Context, in *MsgDeleteTransportation, opts ...grpc.CallOption) (*MsgDeleteTransportationResponse, error) {
	out := new(MsgDeleteTransportationResponse)
	err := c.cc.Invoke(ctx, "/esgobservabilitydemo.esgobservabilitydemo.v1.Msg/DeleteTransportation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateMaterialProcessing(ctx context.Context, in *MsgCreateMaterialProcessing, opts ...grpc.CallOption) (*MsgCreateMaterialProcessingResponse, error) {
	out := new(MsgCreateMaterialProcessingResponse)
	err := c.cc.Invoke(ctx, "/esgobservabilitydemo.esgobservabilitydemo.v1.Msg/CreateMaterialProcessing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateMaterialProcessing(ctx context.Context, in *MsgUpdateMaterialProcessing, opts ...grpc.CallOption) (*MsgUpdateMaterialProcessingResponse, error) {
	out := new(MsgUpdateMaterialProcessingResponse)
	err := c.cc.Invoke(ctx, "/esgobservabilitydemo.esgobservabilitydemo.v1.Msg/UpdateMaterialProcessing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteMaterialProcessing(ctx context.Context, in *MsgDeleteMaterialProcessing, opts ...grpc.CallOption) (*MsgDeleteMaterialProcessingResponse, error) {
	out := new(MsgDeleteMaterialProcessingResponse)
	err := c.cc.Invoke(ctx, "/esgobservabilitydemo.esgobservabilitydemo.v1.Msg/DeleteMaterialProcessing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(context.Context, *MsgUpdateParams) (*MsgUpdateParamsResponse, error)
	// CreateRawMaterialExtraction defines the CreateRawMaterialExtraction RPC.
	CreateRawMaterialExtraction(context.Context, *MsgCreateRawMaterialExtraction) (*MsgCreateRawMaterialExtractionResponse, error)
	// UpdateRawMaterialExtraction defines the UpdateRawMaterialExtraction RPC.
	UpdateRawMaterialExtraction(context.Context, *MsgUpdateRawMaterialExtraction) (*MsgUpdateRawMaterialExtractionResponse, error)
	// DeleteRawMaterialExtraction defines the DeleteRawMaterialExtraction RPC.
	DeleteRawMaterialExtraction(context.Context, *MsgDeleteRawMaterialExtraction) (*MsgDeleteRawMaterialExtractionResponse, error)
	// CreateManufacturing defines the CreateManufacturing RPC.
	CreateManufacturing(context.Context, *MsgCreateManufacturing) (*MsgCreateManufacturingResponse, error)
	// UpdateManufacturing defines the UpdateManufacturing RPC.
	UpdateManufacturing(context.Context, *MsgUpdateManufacturing) (*MsgUpdateManufacturingResponse, error)
	// DeleteManufacturing defines the DeleteManufacturing RPC.
	DeleteManufacturing(context.Context, *MsgDeleteManufacturing) (*MsgDeleteManufacturingResponse, error)
	// CreateTransportation defines the CreateTransportation RPC.
	CreateTransportation(context.Context, *MsgCreateTransportation) (*MsgCreateTransportationResponse, error)
	// UpdateTransportation defines the UpdateTransportation RPC.
	UpdateTransportation(context.Context, *MsgUpdateTransportation) (*MsgUpdateTransportationResponse, error)
	// DeleteTransportation defines the DeleteTransportation RPC.
	DeleteTransportation(context.Context, *MsgDeleteTransportation) (*MsgDeleteTransportationResponse, error)
	// CreateMaterialProcessing defines the CreateMaterialProcessing RPC.
	CreateMaterialProcessing(context.Context, *MsgCreateMaterialProcessing) (*MsgCreateMaterialProcessingResponse, error)
	// UpdateMaterialProcessing defines the UpdateMaterialProcessing RPC.
	UpdateMaterialProcessing(context.Context, *MsgUpdateMaterialProcessing) (*MsgUpdateMaterialProcessingResponse, error)
	// DeleteMaterialProcessing defines the DeleteMaterialProcessing RPC.
	DeleteMaterialProcessing(context.Context, *MsgDeleteMaterialProcessing) (*MsgDeleteMaterialProcessingResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) UpdateParams(ctx context.Context, req *MsgUpdateParams) (*MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}
func (*UnimplementedMsgServer) CreateRawMaterialExtraction(ctx context.Context, req *MsgCreateRawMaterialExtraction) (*MsgCreateRawMaterialExtractionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRawMaterialExtraction not implemented")
}
func (*UnimplementedMsgServer) UpdateRawMaterialExtraction(ctx context.Context, req *MsgUpdateRawMaterialExtraction) (*MsgUpdateRawMaterialExtractionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRawMaterialExtraction not implemented")
}
func (*UnimplementedMsgServer) DeleteRawMaterialExtraction(ctx context.Context, req *MsgDeleteRawMaterialExtraction) (*MsgDeleteRawMaterialExtractionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRawMaterialExtraction not implemented")
}
func (*UnimplementedMsgServer) CreateManufacturing(ctx context.Context, req *MsgCreateManufacturing) (*MsgCreateManufacturingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateManufacturing not implemented")
}
func (*UnimplementedMsgServer) UpdateManufacturing(ctx context.Context, req *MsgUpdateManufacturing) (*MsgUpdateManufacturingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateManufacturing not implemented")
}
func (*UnimplementedMsgServer) DeleteManufacturing(ctx context.Context, req *MsgDeleteManufacturing) (*MsgDeleteManufacturingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteManufacturing not implemented")
}
func (*UnimplementedMsgServer) CreateTransportation(ctx context.Context, req *MsgCreateTransportation) (*MsgCreateTransportationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTransportation not implemented")
}
func (*UnimplementedMsgServer) UpdateTransportation(ctx context.Context, req *MsgUpdateTransportation) (*MsgUpdateTransportationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTransportation not implemented")
}
func (*UnimplementedMsgServer) DeleteTransportation(ctx context.Context, req *MsgDeleteTransportation) (*MsgDeleteTransportationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTransportation not implemented")
}
func (*UnimplementedMsgServer) CreateMaterialProcessing(ctx context.Context, req *MsgCreateMaterialProcessing) (*MsgCreateMaterialProcessingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMaterialProcessing not implemented")
}
func (*UnimplementedMsgServer) UpdateMaterialProcessing(ctx context.Context, req *MsgUpdateMaterialProcessing) (*MsgUpdateMaterialProcessingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMaterialProcessing not implemented")
}
func (*UnimplementedMsgServer) DeleteMaterialProcessing(ctx context.Context, req *MsgDeleteMaterialProcessing) (*MsgDeleteMaterialProcessingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMaterialProcessing not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/esgobservabilitydemo.esgobservabilitydemo.v1.Msg/UpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateParams(ctx, req.(*MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateRawMaterialExtraction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateRawMaterialExtraction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateRawMaterialExtraction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/esgobservabilitydemo.esgobservabilitydemo.v1.Msg/CreateRawMaterialExtraction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateRawMaterialExtraction(ctx, req.(*MsgCreateRawMaterialExtraction))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateRawMaterialExtraction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateRawMaterialExtraction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateRawMaterialExtraction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/esgobservabilitydemo.esgobservabilitydemo.v1.Msg/UpdateRawMaterialExtraction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateRawMaterialExtraction(ctx, req.(*MsgUpdateRawMaterialExtraction))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteRawMaterialExtraction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteRawMaterialExtraction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteRawMaterialExtraction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/esgobservabilitydemo.esgobservabilitydemo.v1.Msg/DeleteRawMaterialExtraction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteRawMaterialExtraction(ctx, req.(*MsgDeleteRawMaterialExtraction))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateManufacturing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateManufacturing)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateManufacturing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/esgobservabilitydemo.esgobservabilitydemo.v1.Msg/CreateManufacturing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateManufacturing(ctx, req.(*MsgCreateManufacturing))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateManufacturing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateManufacturing)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateManufacturing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/esgobservabilitydemo.esgobservabilitydemo.v1.Msg/UpdateManufacturing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateManufacturing(ctx, req.(*MsgUpdateManufacturing))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteManufacturing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteManufacturing)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteManufacturing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/esgobservabilitydemo.esgobservabilitydemo.v1.Msg/DeleteManufacturing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteManufacturing(ctx, req.(*MsgDeleteManufacturing))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateTransportation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateTransportation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateTransportation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/esgobservabilitydemo.esgobservabilitydemo.v1.Msg/CreateTransportation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateTransportation(ctx, req.(*MsgCreateTransportation))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateTransportation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateTransportation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateTransportation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/esgobservabilitydemo.esgobservabilitydemo.v1.Msg/UpdateTransportation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateTransportation(ctx, req.(*MsgUpdateTransportation))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteTransportation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteTransportation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteTransportation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/esgobservabilitydemo.esgobservabilitydemo.v1.Msg/DeleteTransportation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteTransportation(ctx, req.(*MsgDeleteTransportation))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateMaterialProcessing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateMaterialProcessing)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateMaterialProcessing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/esgobservabilitydemo.esgobservabilitydemo.v1.Msg/CreateMaterialProcessing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateMaterialProcessing(ctx, req.(*MsgCreateMaterialProcessing))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateMaterialProcessing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateMaterialProcessing)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateMaterialProcessing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/esgobservabilitydemo.esgobservabilitydemo.v1.Msg/UpdateMaterialProcessing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateMaterialProcessing(ctx, req.(*MsgUpdateMaterialProcessing))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteMaterialProcessing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteMaterialProcessing)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteMaterialProcessing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/esgobservabilitydemo.esgobservabilitydemo.v1.Msg/DeleteMaterialProcessing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteMaterialProcessing(ctx, req.(*MsgDeleteMaterialProcessing))
	}
	return interceptor(ctx, in, info, handler)
}

var Msg_serviceDesc = _Msg_serviceDesc
var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "esgobservabilitydemo.esgobservabilitydemo.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateParams",
			Handler:    _Msg_UpdateParams_Handler,
		},
		{
			MethodName: "CreateRawMaterialExtraction",
			Handler:    _Msg_CreateRawMaterialExtraction_Handler,
		},
		{
			MethodName: "UpdateRawMaterialExtraction",
			Handler:    _Msg_UpdateRawMaterialExtraction_Handler,
		},
		{
			MethodName: "DeleteRawMaterialExtraction",
			Handler:    _Msg_DeleteRawMaterialExtraction_Handler,
		},
		{
			MethodName: "CreateManufacturing",
			Handler:    _Msg_CreateManufacturing_Handler,
		},
		{
			MethodName: "UpdateManufacturing",
			Handler:    _Msg_UpdateManufacturing_Handler,
		},
		{
			MethodName: "DeleteManufacturing",
			Handler:    _Msg_DeleteManufacturing_Handler,
		},
		{
			MethodName: "CreateTransportation",
			Handler:    _Msg_CreateTransportation_Handler,
		},
		{
			MethodName: "UpdateTransportation",
			Handler:    _Msg_UpdateTransportation_Handler,
		},
		{
			MethodName: "DeleteTransportation",
			Handler:    _Msg_DeleteTransportation_Handler,
		},
		{
			MethodName: "CreateMaterialProcessing",
			Handler:    _Msg_CreateMaterialProcessing_Handler,
		},
		{
			MethodName: "UpdateMaterialProcessing",
			Handler:    _Msg_UpdateMaterialProcessing_Handler,
		},
		{
			MethodName: "DeleteMaterialProcessing",
			Handler:    _Msg_DeleteMaterialProcessing_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "esgobservabilitydemo/esgobservabilitydemo/v1/tx.proto",
}

func (m *MsgUpdateParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateRawMaterialExtraction) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateRawMaterialExtraction) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateRawMaterialExtraction) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Emissions) > 0 {
		i -= len(m.Emissions)
		copy(dAtA[i:], m.Emissions)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Emissions)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.WaterUse) > 0 {
		i -= len(m.WaterUse)
		copy(dAtA[i:], m.WaterUse)
		i = encodeVarintTx(dAtA, i, uint64(len(m.WaterUse)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ResourceType) > 0 {
		i -= len(m.ResourceType)
		copy(dAtA[i:], m.ResourceType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ResourceType)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateRawMaterialExtractionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateRawMaterialExtractionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateRawMaterialExtractionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateRawMaterialExtraction) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateRawMaterialExtraction) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateRawMaterialExtraction) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Emissions) > 0 {
		i -= len(m.Emissions)
		copy(dAtA[i:], m.Emissions)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Emissions)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.WaterUse) > 0 {
		i -= len(m.WaterUse)
		copy(dAtA[i:], m.WaterUse)
		i = encodeVarintTx(dAtA, i, uint64(len(m.WaterUse)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ResourceType) > 0 {
		i -= len(m.ResourceType)
		copy(dAtA[i:], m.ResourceType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ResourceType)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateRawMaterialExtractionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateRawMaterialExtractionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateRawMaterialExtractionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteRawMaterialExtraction) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteRawMaterialExtraction) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteRawMaterialExtraction) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteRawMaterialExtractionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteRawMaterialExtractionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteRawMaterialExtractionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateManufacturing) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateManufacturing) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateManufacturing) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Emissions) > 0 {
		i -= len(m.Emissions)
		copy(dAtA[i:], m.Emissions)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Emissions)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.WaterUse) > 0 {
		i -= len(m.WaterUse)
		copy(dAtA[i:], m.WaterUse)
		i = encodeVarintTx(dAtA, i, uint64(len(m.WaterUse)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ComponentType) > 0 {
		i -= len(m.ComponentType)
		copy(dAtA[i:], m.ComponentType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ComponentType)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateManufacturingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateManufacturingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateManufacturingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateManufacturing) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateManufacturing) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateManufacturing) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Emissions) > 0 {
		i -= len(m.Emissions)
		copy(dAtA[i:], m.Emissions)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Emissions)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.WaterUse) > 0 {
		i -= len(m.WaterUse)
		copy(dAtA[i:], m.WaterUse)
		i = encodeVarintTx(dAtA, i, uint64(len(m.WaterUse)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ComponentType) > 0 {
		i -= len(m.ComponentType)
		copy(dAtA[i:], m.ComponentType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ComponentType)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateManufacturingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateManufacturingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateManufacturingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteManufacturing) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteManufacturing) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteManufacturing) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteManufacturingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteManufacturingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteManufacturingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateTransportation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTransportation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTransportation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Emissions) > 0 {
		i -= len(m.Emissions)
		copy(dAtA[i:], m.Emissions)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Emissions)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.FuelUse) > 0 {
		i -= len(m.FuelUse)
		copy(dAtA[i:], m.FuelUse)
		i = encodeVarintTx(dAtA, i, uint64(len(m.FuelUse)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.TransportationType) > 0 {
		i -= len(m.TransportationType)
		copy(dAtA[i:], m.TransportationType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TransportationType)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTransportationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTransportationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTransportationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTransportation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTransportation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTransportation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Emissions) > 0 {
		i -= len(m.Emissions)
		copy(dAtA[i:], m.Emissions)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Emissions)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.FuelUse) > 0 {
		i -= len(m.FuelUse)
		copy(dAtA[i:], m.FuelUse)
		i = encodeVarintTx(dAtA, i, uint64(len(m.FuelUse)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.TransportationType) > 0 {
		i -= len(m.TransportationType)
		copy(dAtA[i:], m.TransportationType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TransportationType)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTransportationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTransportationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTransportationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTransportation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTransportation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTransportation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTransportationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTransportationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTransportationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateMaterialProcessing) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateMaterialProcessing) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateMaterialProcessing) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Emissions) > 0 {
		i -= len(m.Emissions)
		copy(dAtA[i:], m.Emissions)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Emissions)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.WaterUse) > 0 {
		i -= len(m.WaterUse)
		copy(dAtA[i:], m.WaterUse)
		i = encodeVarintTx(dAtA, i, uint64(len(m.WaterUse)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.MaterialType) > 0 {
		i -= len(m.MaterialType)
		copy(dAtA[i:], m.MaterialType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MaterialType)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateMaterialProcessingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateMaterialProcessingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateMaterialProcessingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateMaterialProcessing) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateMaterialProcessing) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateMaterialProcessing) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Emissions) > 0 {
		i -= len(m.Emissions)
		copy(dAtA[i:], m.Emissions)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Emissions)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.WaterUse) > 0 {
		i -= len(m.WaterUse)
		copy(dAtA[i:], m.WaterUse)
		i = encodeVarintTx(dAtA, i, uint64(len(m.WaterUse)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.MaterialType) > 0 {
		i -= len(m.MaterialType)
		copy(dAtA[i:], m.MaterialType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MaterialType)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateMaterialProcessingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateMaterialProcessingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateMaterialProcessingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteMaterialProcessing) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteMaterialProcessing) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteMaterialProcessing) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteMaterialProcessingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteMaterialProcessingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteMaterialProcessingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgUpdateParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateRawMaterialExtraction) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ResourceType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.WaterUse)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Emissions)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateRawMaterialExtractionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateRawMaterialExtraction) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.ResourceType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.WaterUse)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Emissions)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateRawMaterialExtractionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteRawMaterialExtraction) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteRawMaterialExtractionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateManufacturing) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ComponentType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.WaterUse)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Emissions)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateManufacturingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateManufacturing) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.ComponentType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.WaterUse)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Emissions)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateManufacturingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteManufacturing) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteManufacturingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateTransportation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TransportationType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.FuelUse)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Emissions)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateTransportationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateTransportation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.TransportationType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.FuelUse)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Emissions)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateTransportationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteTransportation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteTransportationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateMaterialProcessing) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.MaterialType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.WaterUse)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Emissions)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateMaterialProcessingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateMaterialProcessing) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.MaterialType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.WaterUse)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Emissions)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateMaterialProcessingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteMaterialProcessing) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteMaterialProcessingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgUpdateParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateRawMaterialExtraction) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateRawMaterialExtraction: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateRawMaterialExtraction: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WaterUse", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WaterUse = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Emissions", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Emissions = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateRawMaterialExtractionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateRawMaterialExtractionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateRawMaterialExtractionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateRawMaterialExtraction) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateRawMaterialExtraction: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateRawMaterialExtraction: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WaterUse", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WaterUse = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Emissions", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Emissions = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateRawMaterialExtractionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateRawMaterialExtractionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateRawMaterialExtractionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteRawMaterialExtraction) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteRawMaterialExtraction: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteRawMaterialExtraction: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteRawMaterialExtractionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteRawMaterialExtractionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteRawMaterialExtractionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateManufacturing) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateManufacturing: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateManufacturing: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComponentType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComponentType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WaterUse", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WaterUse = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Emissions", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Emissions = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateManufacturingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateManufacturingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateManufacturingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateManufacturing) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateManufacturing: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateManufacturing: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComponentType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComponentType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WaterUse", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WaterUse = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Emissions", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Emissions = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateManufacturingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateManufacturingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateManufacturingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteManufacturing) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteManufacturing: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteManufacturing: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteManufacturingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteManufacturingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteManufacturingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTransportation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTransportation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTransportation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TransportationType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TransportationType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FuelUse", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FuelUse = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Emissions", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Emissions = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTransportationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTransportationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTransportationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTransportation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTransportation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTransportation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TransportationType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TransportationType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FuelUse", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FuelUse = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Emissions", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Emissions = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTransportationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTransportationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTransportationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteTransportation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTransportation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTransportation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteTransportationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTransportationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTransportationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateMaterialProcessing) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateMaterialProcessing: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateMaterialProcessing: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaterialType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MaterialType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WaterUse", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WaterUse = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Emissions", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Emissions = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateMaterialProcessingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateMaterialProcessingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateMaterialProcessingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateMaterialProcessing) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateMaterialProcessing: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateMaterialProcessing: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaterialType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MaterialType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WaterUse", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WaterUse = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Emissions", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Emissions = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateMaterialProcessingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateMaterialProcessingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateMaterialProcessingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteMaterialProcessing) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteMaterialProcessing: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteMaterialProcessing: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteMaterialProcessingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteMaterialProcessingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteMaterialProcessingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
